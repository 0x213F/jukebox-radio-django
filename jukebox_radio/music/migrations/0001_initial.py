# Generated by Django 3.0.10 on 2020-10-26 03:19

from django.db import migrations, models
import django.db.models.deletion
import music.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('format', models.CharField(choices=[('album', 'Album'), ('playlist', 'Playlist'), ('jukebox_radio', 'Jukebox Radio')], max_length=32)),
                ('jr_name', models.CharField(blank=True, max_length=128, null=True)),
                ('jr_duration_ms', models.PositiveIntegerField(blank=True, null=True)),
                ('jr_img', models.ImageField(upload_to=music.models.upload_to_collections_jr_imgs)),
                ('spotify_uri', models.CharField(max_length=200)),
                ('spotify_name', models.CharField(max_length=200)),
                ('spotify_img', models.CharField(max_length=200)),
                ('youtube_id', models.CharField(max_length=200)),
                ('youtube_name', models.CharField(max_length=200)),
                ('youtube_img', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jr_audio', models.FileField(upload_to=music.models.upload_to_tracks_jr_audios)),
                ('jr_name', models.CharField(blank=True, max_length=128, null=True)),
                ('jr_duration_ms', models.PositiveIntegerField(blank=True, null=True)),
                ('jr_img', models.ImageField(upload_to=music.models.upload_to_tracks_jr_imgs)),
                ('spotify_uri', models.CharField(max_length=200)),
                ('spotify_name', models.CharField(max_length=200)),
                ('spotify_duration_ms', models.PositiveIntegerField()),
                ('spotify_img', models.CharField(max_length=200)),
                ('youtube_id', models.CharField(max_length=200)),
                ('youtube_name', models.CharField(max_length=200)),
                ('youtube_duration_ms', models.PositiveIntegerField()),
                ('youtube_img', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Album',
            fields=[
            ],
            options={
                'verbose_name': 'Album',
                'verbose_name_plural': 'Albums',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('music.collection',),
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
            ],
            options={
                'verbose_name': 'Playlist',
                'verbose_name_plural': 'Playlists',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('music.collection',),
        ),
        migrations.CreateModel(
            name='CollectionListing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('child_collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='child_collection_listings', to='music.Collection')),
                ('child_track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.Track')),
                ('parent_collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_collection_listings', to='music.Collection')),
            ],
            options={
                'unique_together': {('child_track', 'child_collection', 'parent_collection', 'number')},
            },
        ),
    ]
